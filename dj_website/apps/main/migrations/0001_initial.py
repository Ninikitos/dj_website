# Generated by Django 5.1.4 on 2024-12-20 23:22

import dj_website.apps.main.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hero_watch_tiktok', models.URLField(blank=True, help_text='Only YouTube, TikTok, and MixCloud links are allowed.', validators=[dj_website.apps.main.models.social_media_link_validator])),
                ('general_booking', models.URLField(blank=True)),
                ('party_booking', models.URLField(blank=True)),
                ('live_booking', models.URLField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Main Page',
            },
        ),
        migrations.CreateModel(
            name='MusicLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('photo', models.ImageField(blank=True, upload_to='music_links/')),
                ('link', models.URLField(blank=True, help_text='Only YouTube, TikTok, and MixCloud links are allowed.', validators=[dj_website.apps.main.models.social_media_link_validator])),
            ],
            options={
                'verbose_name': 'Music Link',
                'verbose_name_plural': 'Music Links',
            },
        ),
        migrations.CreateModel(
            name='MusicSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('audio_file', models.FileField(blank='', upload_to='music_samples/')),
            ],
            options={
                'verbose_name': 'Music Sample',
                'verbose_name_plural': 'Music Samples',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=3)),
                ('thumbnail_photo', models.ImageField(blank=True, upload_to='shop_thumbnails/')),
                ('preview_photo', models.ImageField(blank=True, upload_to='shop_previews/')),
                ('link', models.URLField()),
            ],
            options={
                'verbose_name': 'Product Item',
                'verbose_name_plural': 'Product Items',
            },
        ),
        migrations.CreateModel(
            name='YoutubeLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail', models.ImageField(blank='', upload_to='youtube_thumbnails/')),
                ('link', models.URLField(blank=True, help_text='Only YouTube, TikTok, and MixCloud links are allowed.', validators=[dj_website.apps.main.models.social_media_link_validator])),
            ],
            options={
                'verbose_name': 'YouTube Link',
                'verbose_name_plural': 'YouTube Links',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='product_images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='main.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
            },
        ),
    ]
